# -*- coding: utf-8 -*-
# Generated by Django 1.11.28 on 2020-05-23 11:51
from __future__ import unicode_literals

import core.file_system
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import repository.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('submission', '0043_auto_20200523_1158'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255)),
                ('affiliation', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('body', models.TextField(verbose_name='Write your comment:')),
                ('is_reviewed', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_time', '-pk'),
            },
        ),
        migrations.CreateModel(
            name='Preprint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Your article title', max_length=300)),
                ('abstract', models.TextField(blank=True, help_text='Please avoid pasting content from word processors as they can add unwanted styling to the abstract. You can retype the abstract here or copy and paste it into notepad/a plain text editor before pasting here.', null=True)),
                ('meta_image', models.ImageField(blank=True, null=True, storage=core.file_system.JanewayFileSystemStorage(), upload_to=repository.models.preprint_file_upload)),
                ('doi', models.CharField(max_length=100)),
                ('preprint_decision_notification', models.BooleanField(default=False)),
                ('date_started', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_submitted', models.DateTimeField(blank=True, null=True)),
                ('date_accepted', models.DateTimeField(blank=True, null=True)),
                ('date_declined', models.DateTimeField(blank=True, null=True)),
                ('date_published', models.DateTimeField(blank=True, null=True)),
                ('date_updated', models.DateTimeField(blank=True, null=True)),
                ('current_step', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='PreprintAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='PreprintFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(storage=core.file_system.JanewayFileSystemStorage(location='/home/ajrbyers/janeway/src/files'), upload_to=repository.models.preprint_file_upload)),
                ('preprint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Preprint')),
            ],
        ),
        migrations.CreateModel(
            name='PreprintVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(default=1)),
                ('date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.PreprintFile')),
                ('preprint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Preprint')),
            ],
            options={
                'ordering': ('-date_time', '-id'),
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=15)),
                ('logo', models.ImageField(blank=True, null=True, storage=core.file_system.JanewayFileSystemStorage(), upload_to=core.file_system.JanewayFileSystemStorage())),
                ('publisher', models.CharField(help_text='Used for outputs including DC and Citation metadata', max_length=255)),
                ('live', models.BooleanField(default=False)),
                ('managers', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('input_type', models.CharField(choices=[('text', 'Text'), ('select', 'Dropdown'), ('checkbox', 'Checkbox'), ('number', 'Number'), ('date', 'Date')], max_length=255)),
                ('width', models.CharField(choices=[(3, '3'), (6, '6'), (9, '9'), (12, '12')], max_length=2)),
                ('dc_metadata_type', models.CharField(help_text='If this field is to be output as a dc metadata field you can addthe type here.', max_length=255)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Repository')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True)),
                ('enabled', models.BooleanField(default=True, help_text='If disabled, this subject will not appear publicly.')),
                ('editors', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='repository.Subject')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Repository')),
            ],
            options={
                'ordering': ('slug', 'pk'),
            },
        ),
        migrations.CreateModel(
            name='VersionQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_type', models.CharField(choices=[('correction', 'Correction'), ('version', 'New Version')], max_length=10)),
                ('date_submitted', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_decision', models.DateTimeField(blank=True, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.PreprintFile')),
                ('preprint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Preprint')),
            ],
        ),
        migrations.AddField(
            model_name='preprintaccess',
            name='file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.PreprintFile'),
        ),
        migrations.AddField(
            model_name='preprintaccess',
            name='preprint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Preprint'),
        ),
        migrations.AddField(
            model_name='preprint',
            name='curent_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='curent_version', to='repository.PreprintVersion'),
        ),
        migrations.AddField(
            model_name='preprint',
            name='keywords',
            field=models.ManyToManyField(blank=True, null=True, to='submission.Keyword'),
        ),
        migrations.AddField(
            model_name='preprint',
            name='license',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='submission.Licence'),
        ),
        migrations.AddField(
            model_name='preprint',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='preprint',
            name='repository',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.Repository'),
        ),
        migrations.AddField(
            model_name='preprint',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.Subject'),
        ),
        migrations.AddField(
            model_name='preprint',
            name='submission_file',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submission_file', to='repository.PreprintFile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='preprint',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.Preprint'),
        ),
        migrations.AddField(
            model_name='comment',
            name='reply_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.Comment'),
        ),
        migrations.AddField(
            model_name='author',
            name='preprint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Preprint'),
        ),
    ]
